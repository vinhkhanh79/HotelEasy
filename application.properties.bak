server.port=8080
spring.datasource.url=jdbc:sqlserver://localhost:1433;encrypt=true;trustServerCertificate=true;databaseName=hotel_booking
spring.datasource.username=sa
spring.datasource.password=songlong

spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
#server.port=8080
#spring.datasource.url=jdbc:mysql://localhost:3306/hotel_booking
#spring.datasource.username=root
#spring.datasource.password=songlong
#
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=none

#Hot reload for Thymeleaf
spring.thymeleaf.cache=false

#Need an existing table for init
#spring.sql.init.mode=always

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=huuvinh627@gmail.com
spring.mail.password=mlno inex xnua xcco
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

vnpay.tmnCode=yourTmnCode
vnpay.secretKey=yourSecretKey
vnpay.apiUrl=https://sandbox.vnpayment.vn/merchant_webapi/api/transaction
vnpay.returnUrl=http://localhost:8080/vnpay_return
vnpay.payUrl=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

cloudinary.cloud-name=dliwvet1v
cloudinary.api-key=455439741442169
cloudinary.api-secret=dHUsO9dPvN7QAtQNoocLYLErSNw
spring.main.allow-bean-definition-overriding=true

#Spring Security OAuth2 Client configuration for Google
spring.security.oauth2.client.registration.google.client-id=983488938918-0btqhok01r4vk2ijmei60utop7bjvfo1.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Google OAuth2 provider details
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Facebook OAuth2 configuration
spring.security.oauth2.client.registration.facebook.client-id=948225483237165
spring.security.oauth2.client.registration.facebook.client-secret=1015f90224b6fa78718a31c24f5caebb
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Facebook OAuth2 provider details
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v12.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v12.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture